# Generated from Kobra.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,16,86,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,
        1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,4,6,55,8,6,11,6,12,6,
        56,1,7,1,7,5,7,61,8,7,10,7,12,7,64,9,7,1,8,1,8,1,9,1,9,1,10,1,10,
        1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,4,15,81,8,15,11,15,
        12,15,82,1,15,1,15,0,0,16,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,1,0,11,1,0,48,57,2,0,
        65,90,97,122,4,0,48,57,65,90,95,95,97,122,1,0,61,61,1,0,43,43,1,
        0,45,45,1,0,42,42,1,0,47,47,1,0,62,62,1,0,60,60,3,0,9,10,13,13,32,
        32,88,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,1,33,1,0,0,0,3,36,1,0,0,0,5,38,1,0,0,0,7,40,1,0,0,
        0,9,42,1,0,0,0,11,44,1,0,0,0,13,54,1,0,0,0,15,58,1,0,0,0,17,65,1,
        0,0,0,19,67,1,0,0,0,21,69,1,0,0,0,23,71,1,0,0,0,25,73,1,0,0,0,27,
        75,1,0,0,0,29,77,1,0,0,0,31,80,1,0,0,0,33,34,5,83,0,0,34,35,5,73,
        0,0,35,2,1,0,0,0,36,37,5,40,0,0,37,4,1,0,0,0,38,39,5,41,0,0,39,6,
        1,0,0,0,40,41,5,123,0,0,41,8,1,0,0,0,42,43,5,125,0,0,43,10,1,0,0,
        0,44,45,5,77,0,0,45,46,5,73,0,0,46,47,5,69,0,0,47,48,5,78,0,0,48,
        49,5,84,0,0,49,50,5,82,0,0,50,51,5,65,0,0,51,52,5,83,0,0,52,12,1,
        0,0,0,53,55,7,0,0,0,54,53,1,0,0,0,55,56,1,0,0,0,56,54,1,0,0,0,56,
        57,1,0,0,0,57,14,1,0,0,0,58,62,7,1,0,0,59,61,7,2,0,0,60,59,1,0,0,
        0,61,64,1,0,0,0,62,60,1,0,0,0,62,63,1,0,0,0,63,16,1,0,0,0,64,62,
        1,0,0,0,65,66,7,3,0,0,66,18,1,0,0,0,67,68,7,4,0,0,68,20,1,0,0,0,
        69,70,7,5,0,0,70,22,1,0,0,0,71,72,7,6,0,0,72,24,1,0,0,0,73,74,7,
        7,0,0,74,26,1,0,0,0,75,76,7,8,0,0,76,28,1,0,0,0,77,78,7,9,0,0,78,
        30,1,0,0,0,79,81,7,10,0,0,80,79,1,0,0,0,81,82,1,0,0,0,82,80,1,0,
        0,0,82,83,1,0,0,0,83,84,1,0,0,0,84,85,6,15,0,0,85,32,1,0,0,0,4,0,
        56,62,82,1,6,0,0
    ]

class KobraLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    NUM = 7
    ID = 8
    ASIG = 9
    SUMA = 10
    REST = 11
    MULT = 12
    DIV = 13
    MAYR = 14
    MENR = 15
    WS = 16

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'SI'", "'('", "')'", "'{'", "'}'", "'MIENTRAS'" ]

    symbolicNames = [ "<INVALID>",
            "NUM", "ID", "ASIG", "SUMA", "REST", "MULT", "DIV", "MAYR", 
            "MENR", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "NUM", 
                  "ID", "ASIG", "SUMA", "REST", "MULT", "DIV", "MAYR", "MENR", 
                  "WS" ]

    grammarFileName = "Kobra.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


