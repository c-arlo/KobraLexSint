# Generated from Kobra.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,18,86,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,1,0,1,0,1,1,1,1,1,2,
        4,2,43,8,2,11,2,12,2,44,1,3,1,3,5,3,49,8,3,10,3,12,3,52,9,3,1,4,
        1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
        1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,4,17,81,8,
        17,11,17,12,17,82,1,17,1,17,0,0,18,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
        15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        1,0,17,1,0,48,57,2,0,65,90,97,122,3,0,48,57,65,90,97,122,2,0,73,
        73,83,83,5,0,65,65,69,69,73,73,77,78,82,84,1,0,61,61,1,0,40,40,1,
        0,41,41,1,0,123,123,1,0,125,125,1,0,43,43,1,0,45,45,1,0,42,42,1,
        0,47,47,1,0,62,62,1,0,60,60,3,0,9,10,13,13,32,32,88,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,1,37,1,0,0,0,3,39,1,0,0,0,5,42,1,0,0,0,7,46,
        1,0,0,0,9,53,1,0,0,0,11,55,1,0,0,0,13,57,1,0,0,0,15,59,1,0,0,0,17,
        61,1,0,0,0,19,63,1,0,0,0,21,65,1,0,0,0,23,67,1,0,0,0,25,69,1,0,0,
        0,27,71,1,0,0,0,29,73,1,0,0,0,31,75,1,0,0,0,33,77,1,0,0,0,35,80,
        1,0,0,0,37,38,5,40,0,0,38,2,1,0,0,0,39,40,5,41,0,0,40,4,1,0,0,0,
        41,43,7,0,0,0,42,41,1,0,0,0,43,44,1,0,0,0,44,42,1,0,0,0,44,45,1,
        0,0,0,45,6,1,0,0,0,46,50,7,1,0,0,47,49,7,2,0,0,48,47,1,0,0,0,49,
        52,1,0,0,0,50,48,1,0,0,0,50,51,1,0,0,0,51,8,1,0,0,0,52,50,1,0,0,
        0,53,54,7,3,0,0,54,10,1,0,0,0,55,56,7,4,0,0,56,12,1,0,0,0,57,58,
        7,5,0,0,58,14,1,0,0,0,59,60,7,6,0,0,60,16,1,0,0,0,61,62,7,7,0,0,
        62,18,1,0,0,0,63,64,7,8,0,0,64,20,1,0,0,0,65,66,7,9,0,0,66,22,1,
        0,0,0,67,68,7,10,0,0,68,24,1,0,0,0,69,70,7,11,0,0,70,26,1,0,0,0,
        71,72,7,12,0,0,72,28,1,0,0,0,73,74,7,13,0,0,74,30,1,0,0,0,75,76,
        7,14,0,0,76,32,1,0,0,0,77,78,7,15,0,0,78,34,1,0,0,0,79,81,7,16,0,
        0,80,79,1,0,0,0,81,82,1,0,0,0,82,80,1,0,0,0,82,83,1,0,0,0,83,84,
        1,0,0,0,84,85,6,17,0,0,85,36,1,0,0,0,4,0,44,50,82,1,6,0,0
    ]

class KobraLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    NUM = 3
    ID = 4
    IF = 5
    WHILE = 6
    ASIG = 7
    PARI = 8
    PARD = 9
    LLAVI = 10
    LLAVD = 11
    SUMA = 12
    REST = 13
    MULT = 14
    DIV = 15
    MAYR = 16
    MENR = 17
    WS = 18

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "NUM", "ID", "IF", "WHILE", "ASIG", "PARI", "PARD", "LLAVI", 
            "LLAVD", "SUMA", "REST", "MULT", "DIV", "MAYR", "MENR", "WS" ]

    ruleNames = [ "T__0", "T__1", "NUM", "ID", "IF", "WHILE", "ASIG", "PARI", 
                  "PARD", "LLAVI", "LLAVD", "SUMA", "REST", "MULT", "DIV", 
                  "MAYR", "MENR", "WS" ]

    grammarFileName = "Kobra.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


